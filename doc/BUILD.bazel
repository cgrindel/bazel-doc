load(
    "//bazeldoc:bazeldoc.bzl",
    "doc_for_provs",
    "write_file_list",
    "write_header",
    doc_providers = "providers",
)

# Lovingly inspired by
# https://github.com/bazelbuild/rules_swift/blob/021c11b1d578ffba547140eb24854cdfe74c794f/doc/BUILD.bazel#L3

# MARK: - Documentation Declarations

_API_SRCS = [
    "providers",
]

_DOC_WITH_SYMBOLS = {
    "build_rules": [
        "doc_for_provs",
        "write_header",
        "write_file_list",
    ],
    "workspace_rules": [
        "bazeldoc_dependencies",
    ],
}

_API_DOC_PROVIDERS = [
    doc_providers.create(
        name = name,
        stardoc_input = "//bazeldoc:bazeldoc.bzl",
        symbols = [name],
        deps = ["//bazeldoc"],
    )
    for name in _API_SRCS
]

_ALL_DOC_PROVIDERS = [
    doc_providers.create(
        name = name + "_overview",
        stardoc_input = "//bazeldoc:bazeldoc.bzl",
        symbols = symbols,
        deps = ["//bazeldoc"],
    )
    for [
        name,
        symbols,
    ] in _DOC_WITH_SYMBOLS.items()
] + [
    doc_providers.create(
        name = "api",
        is_stardoc = False,
        stardoc_input = "//bazeldoc:bazeldoc.bzl",
        deps = ["//bazeldoc"],
    ),
] + _API_DOC_PROVIDERS

# MARK: - Special Case api.md

# Write the api.md_ file as a special case.
write_file_list(
    name = "api_doc",
    out = "api.md_",
    doc_provs = _API_DOC_PROVIDERS,
    header_content = [
        "# Documentation API",
        "",
        "The APIs described below are used by ",
        "[the build rules](/doc/build_rules_overview.md) to facilitate the ",
        "generation of the Starlark documentation.",
        "",
    ],
)

# MARK: - Headers

write_header(
    name = "build_rules_overview_header",
    doc_provs = _DOC_WITH_SYMBOLS["build_rules"],
    header_content = [
        "# Build Rules",
        "",
        "The macros described below are used to generate, test and copy ",
        "Starlark documentation.",
    ],
)

write_header(
    name = "workspace_rules_overview_header",
    doc_provs = _DOC_WITH_SYMBOLS["workspace_rules"],
    header_content = [
        "# Workspace Rules",
        "",
        "The functions described below are used in your WORKSPACE file to",
        "confgure `bazeldoc`.",
    ],
)

# Write the API headers
[
    write_header(
        name = doc_prov.header_label,
        out = doc_prov.header_basename,
        header_content = [
            "# `{name}` API".format(name = doc_prov.name),
        ],
    )
    for doc_prov in _API_DOC_PROVIDERS
    if doc_prov.is_stardoc
]

doc_for_provs(doc_provs = _ALL_DOC_PROVIDERS)
